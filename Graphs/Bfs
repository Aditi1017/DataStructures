
/***
Input : 
5 7
0 1
0 4
1 2
1 3
1 4
2 3
3 4

Output: 0 1 4 2 3 

***/

#include <bits/stdc++.h>
#include<iostream>
using namespace std;

vector<int> bfs(int V, vector<int>adj[])
{
    vector<int> bfs;
    vector<int> vis(V , 0);
	
    queue<int> q;
    q.push(0);
    vis[0] = 1;
    while(!q.empty()){
        int node = q.front();
        q.pop();
        bfs.push_back(node);
        for(auto it: adj[node]){
            if(!vis[it]){
                q.push(it);
                vis[it] = 1;
            }
        }
    }
    return bfs;
}

int main() {
	int V , e;
	cin >> V  >> e;
	vector<int> adj[V]; //vector of array to store edges

	for(int i = 0 ; i<e ; i++){
	    int u,v;
	    cin >> u >>v;
	    
	    adj[u].push_back(v);
	    adj[v].push_back(u);
	}

       vector<int> ans =  bfs(V, adj);
       for(int i = 0 ; i <ans.size(); i++)
       {
           cout << ans[i] << " ";
       }
        cout << endl;
	
	return 0;
}

/***
Input: 
5 7
0 1
0 4
1 2
1 3
1 4
2 3
3 4

Output: 0 1 2 3 4 
***/

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

void dfs(int node, vector<int> &vis, vector<int> adj[], vector<int> &storeDfs) {
        storeDfs.push_back(node); 
        vis[node] = 1; 
        for(auto it : adj[node]) {
            if(!vis[it]) {
                dfs(it, vis, adj, storeDfs); 
            }
        }
    }
    
vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        	vector<int> storeDfs; 
	        vector<int> vis(V, 0); 
      		for(int i = 0;i<V;i++) {
       		 if(!vis[i]) 
		dfs(i, vis, adj, storeDfs); 
	    }
	    return storeDfs; 
}

int main() {
	int V , e;
	cin >> V  >> e;
	vector<int> adj[V];//vector of array to store edges
      
	for(int i = 0 ; i<e ; i++){
	    int u,v;
	    cin >> u >>v;
	    
	    adj[u].push_back(v);
	    adj[v].push_back(u);
	}

       vector<int> ans = dfsOfGraph(V, adj);
       for(int i = 0 ; i <ans.size(); i++)
       {
           cout << ans[i] << " ";
       }
        cout << endl;
	
	return 0;
}
